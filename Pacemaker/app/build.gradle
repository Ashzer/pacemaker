apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    def config = rootProject.extensions.getByName("ext")

    compileSdkVersion config["compile_sdk"]
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId config["applicationId"]
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
        versionCode config["version_code"]
        versionName config["version_name"]
        testInstrumentationRunner config["test_runner"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    def applicationDependencies = rootProject.ext.mainApplication

    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
    def developmentDependencies = rootProject.ext.development

    // Application dependencies
    implementation applicationDependencies.kotlin
    implementation applicationDependencies.kotlinCoroutines
    implementation applicationDependencies.kotlinCoroutinesAndroid
    implementation applicationDependencies.appCompat
    implementation applicationDependencies.coreKtx
    implementation applicationDependencies.constraintLayout
    implementation applicationDependencies.dagger
    implementation applicationDependencies.daggerSupport
    implementation applicationDependencies.daggerLegacy
    implementation applicationDependencies.material
    implementation applicationDependencies.admob
    kapt applicationDependencies.daggerProcessor
    kapt applicationDependencies.daggerCompiler
    implementation applicationDependencies.lifecycleExtensions
    implementation applicationDependencies.lifecycleViewModel
    implementation applicationDependencies.lifecycleLiveData
    implementation applicationDependencies.lifecycleRuntime
    kapt applicationDependencies.lifecycleCompiler
    implementation applicationDependencies.lifecycleVersion
    implementation applicationDependencies.lifecycleReactivestreams
    implementation applicationDependencies.lifecycleFragment
    implementation applicationDependencies.roomRuntime
    kapt applicationDependencies.roomCompiler
    implementation applicationDependencies.roomKtx
    implementation applicationDependencies.roomRxJava
    implementation applicationDependencies.roomGuava
    implementation applicationDependencies.rxJava
    implementation applicationDependencies.rxKotlin

    // Unit/Integration tests dependencies
    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.lifecycleCoreTest
    testImplementation unitTestDependencies.roomTest

    // Acceptance tests dependencies
    androidTestImplementation acceptanceTestDependencies.testJunit
    androidTestImplementation acceptanceTestDependencies.espressoCore

    //Development dependencies
    debugImplementation developmentDependencies.leakCanary
    releaseImplementation developmentDependencies.leakCanaryNoop
    testImplementation developmentDependencies.leakCanaryNoop
}
